#!/usr/bin/tcc -run

#include <stdio.h>
#include <stdlib.h>
#include <math.h>

// 0: pad zeros
// 1: pad first value
static int INIT = 0;
static float DEFAULT_TAU = 5;

// exponential smoothing
int main(int argc, char** argv) {

	float current_in = 0;
	float current = 0;

	// in units of samples
	float tau = DEFAULT_TAU;
	if (argc > 1) {
		if (sscanf(argv[1], "%f", &tau) < 1) tau = DEFAULT_TAU;
	}


	float alpha = exp(-1./tau);
	fprintf(stderr, "tau=%f, alpha=%f\n", tau, alpha);

	setbuf(stdout, NULL);

	int iteration = 0;

	while ((fscanf(stdin, "%f\n", &current_in) != EOF)) {
		if (iteration == 0 && (INIT == 1)) {
			current = current_in;
		} else {
			current = alpha * current + (1 - alpha) * current_in;
		}

		// Output
		printf("%.10f\n", current);

		iteration++;
	}
}
